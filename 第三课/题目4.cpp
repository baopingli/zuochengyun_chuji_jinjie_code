//猫狗队列问题
//两个队列，并封装上index



/**
哈希函数，哈希表
md5，scha1，实现
哈希函数的性质：
1、hash(string) 输入域无穷，返回域一般是有界的。相对有限
2、hash函数不是随机函数，相同的输入值一定得到相同的返回值
3、输入域无穷大，输出域相对有限，所以不同的输入也可能导致相同的输出。
4、离散性：返回域上每个值几乎均匀分布。例子：输入域为0-99，输出域为0，1，2，那么最后0，1，2，对应的输入的数目相差不大。
整个域里面均匀分布。目的是打乱输入规律。输入规律会被彻底打乱。

延申：
域可以缩小，也是均匀的。

哈希表：
哈希表就是散列表。
一个哈希域 然后每个值挂在 对应的值后面。
扩容代价：不频繁，可离线

java中哈希表的实现：

桶结构，原来每个节点后面跟的是链表（因为查询慢），现在是红黑树。

hashset，key和hashmap，key，value仅仅是key的伴随数据而已，原理上基本一致。

hashmap增删改查都是O（1）的操作，但是常数项比较大。hash函数在计算的时候代价比较高。

key在hashmap中不重复，value只是最新的

treemap，红黑树，有序结构


*/



/**
题:设计randompool结构

insert(key)
deletekey(key)
getrandom(),等概率返回结构中的任何一个key
所有方法的复杂度都是O（1）

方法：

在没有delete的时候，等概率返回一个index，是可以的。

如果有delete行为，有的下标可能会没东西。

出现空的情况怎么办，把最后一条记录填到删除的位置，然后最后一个删除，做到index区间内都有值

实现的结构是：两个hashmap。我觉得之所以使用两个hashmap是不是因为增加了index这一项，key-value

需要知道删除的index和最后的index都是什么，从而完成将最后一条记录填充到删除的位置上

然后才能使用随机数得到等概率的值。

*/


